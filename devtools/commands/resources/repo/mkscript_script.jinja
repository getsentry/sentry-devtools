#!/bin/sh # python
"true" '''\'
SNTY_PEXECPATH="$(dirname "$(readlink -f "$0")")"/{{ interpreter }}
if [ ! -x $SNTY_PEXECPATH ]; then
    echo "python interpreter not found; run devenv sync"
    exit -1
fi
exec $SNTY_PEXECPATH "$0" "$@"
'''
from __future__ import annotations

import argparse
import logging
import sys
from collections.abc import Sequence

__doc__ = '''{{ name }} script'''

logger = logging.getLogger(__name__)


def run(args: argparse.Namespace) -> None:
    ''' Run the actual script behaviors '''
    logger.info(f"Script {__file__} executed")


def main(argv: Sequence[str]) -> None:
    # create console handler and set level to debug
    ch = logging.StreamHandler()
    ch.setStream(sys.stderr)
    ch.setLevel(logging.DEBUG)
    logger.addHandler(ch)

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-v",
        action="count",
        required=False,
        dest="verbosity",
        help="Verbosity -v; multiple invocations increase verbosity",
    )
    {%- for arg in arguments %}
    parser.add_argument({{ arg }})
    {%- endfor %}

    args, _ = parser.parse_known_args(argv)

    v = getattr(args, "verbosity", 0) or 0
    if v == 1:
        logger.setLevel(logging.INFO)
    elif v > 1:
        logger.setLevel(logging.DEBUG)

    run(args)


if __name__ == "__main__":
    main(sys.argv[1:])
